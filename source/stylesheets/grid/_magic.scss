//
// Magic (Responsive) Susy Grid System
//

$show-grid-backgrounds: true;

@import "susy";

// For full Susy documentation, visit: http://susy.oddbird.net/tutorial/

// Define mobile-first grid constants.
$total-columns      : 6;
// You can use ems, px or % to define the grid.
$column-width       : 4em;
$gutter-width       : 1em;
$grid-padding       : $gutter-width;

// Uncomment to make the grid fluid (w/ a max-width)
// $container-style: fluid;
// .container{
//   max-width: 1000px;
// }
// Define breakpoints, in this case when there's room for the specified columns.
$break-tablet:   8;
$break-desktop: 12;
$break-huge:    16;

.container{
  // Include `container` if this element will contain a grid system.
  @include container($total-columns);
  // Apply our grid background stripes for development.
  // @include susy-grid-background;
}
header, #main-content, footer{
  // Clearfix for full-width elements
  @include clearfix;
}
// Automatically reset the grid width & re-apply the grid background
// to responsive layouts.
$layouts: $break-tablet, $break-desktop, $break-huge;
@each $layout in $layouts{
  @include at-breakpoint($layout){
    .container{
      @include set-container-width;
      // @include susy-grid-background;
    }
  }
}
@include at-breakpoint($break-tablet){
  .other-sites{
    @include span-columns(8);
    .erin-code{
      @include span-columns(4, 8);
    }
    .erin-camera{
      @include span-columns(4 omega, 8);
    }
  }  
}
@include at-breakpoint($break-desktop){
  .other-sites{
    @include span-columns(12);
    .erin-code{
      @include span-columns(6, 12);
    }
    .erin-camera{
      @include span-columns(6 omega, 12);
     } 
  }  
}
@include at-breakpoint($break-huge){
  .other-sites{
    @include span-columns(16);
    .erin-code{
      @include span-columns(8, 16);
    }
    .erin-camera{
      @include span-columns(8 omega, 16);
    }
  }
}
